name: Anchor Test

on:
  push:
    branches: [main, v*.*]
  
permissions:
  contents: read
  pull-requests: write
  
env:
  CARGO_TERM_COLOR: always
  SOLANA_VERSION: 1.9.21
  ANCHOR_VERSION: 0.24.2
  CLUSTER: "devnet"
  DEVNET_RPC: https://api.devnet.solana.com 
  # DEVNET_FAUCET: "9B5XszUGdMaxCZ7uSQhPzdks5ZQSmWxrmzCSvtJ6Ns6g"
  # Default wallet
  RUNNER_WALLET_PATH: "/home/runner/.config/solana/id.json"
  # Funding wallet
  BANK_WALLET_PATH: "./target/deploy/bank-keypair.json"
  CI_DEPLOYMENT_AUTHORITY_WALLET_PATH: "./target/deploy/ci-resident-upgrade-authority.json"
  # This program stays deployed to test over time
  # RESIDENT_PROGRAM_ID: 55NneSZjuFv6cVDQxYKZ1UF99JoximnzP9aY65fJ4JT9
  RESIDENT_PROGRAM_KEYPAIR: ./target/deploy/ci-resident-keypair.json # another way to get the ID
  # Accounts used to MM on mango market
  MANGO_ACCOUNT_MM_SOL: "8fbL4156uoVYYyY9cvA6hVBBTdui9356tdKmFbkC6t6w"
  MANGO_ACCOUNT_MM_BTC: "4Tw2AjjEXSWvFC9CCm88yhswRGgJokxiQnJDtVnVctTc"
  MANGO_ACCOUNT_MM_ETH: "Bnutxi4RpfduHSuQ2ZtDAEb4GegU3X1gmWZhQpe1YMts"
  #
  NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
  #
  DEPLOYMENT_FUNDING_AMOUNT: 10
  MM_FUNDING_AMOUNT: 0.5  # Keep small it's lost
  TRANSACTION_FEE_OFFSET: 0.005
  # Name of the tests files in the program repo. We use them for sed and swap the `anchor test`
  TEST_DEV: "test_development"
  TEST_INTEGRATION: "test_integration"
  # TEST_CI_FRESH: "test_ci_fresh"
  TEST_CI_SOL: "test_ci_sol"
  TEST_CI_BTC: "test_ci_btc"
  TEST_CI_ETH: "test_ci_eth"
  TEST_CI_REBALANCING: "test_ci_rebalancing"
  TEST_CI_QUOTE_MINT_REDEEM: "test_ci_quote_mint_redeem"
    
concurrency:
  group: environment-${{ github.ref }}

jobs:

  # Build and deploy an updated program at 3kjnUzQgP8AruD7UpngGw2buFvRZdxXocAbrtqpeDdsW
  anchor-build-and-deploy:
    name: Upgrades CI Resident Program
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - uses: actions/checkout@v2
      # Install Rust
      - name: Rust toolchain installation
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
      # Install solana
      - name: Cache Solana Tool Suite
        uses: actions/cache@v2  
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0000-${{ env.SOLANA_VERSION }}
      - name: install solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
      - name: Add Solana to PATH
        run: echo "/home/runner/.local/share/solana/install/active_release/bin:$PATH" >> $GITHUB_PATH
      - name: Setup solana 
        run: |
          solana --version
          solana config set -u d
          solana config set --url ${{ env.DEVNET_RPC}}
      - name: Node 14 installation
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      # Create Keypair
      - name: Create Runner keypair and funds it
        run: |
          solana-keygen new -o ${{ env.RUNNER_WALLET_PATH }} --no-passphrase --silent
          solana transfer --keypair ${{ env.BANK_WALLET_PATH }} $(solana-keygen pubkey ${{ env.RUNNER_WALLET_PATH }}) ${{ env.DEPLOYMENT_FUNDING_AMOUNT }} --allow-unfunded-recipient
          solana balance
      # Cargo caching
      - name: Cache Cargo registry + index
        uses: actions/cache@v2  
        id: cache-anchor
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-${{ runner.os }}-v0000-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache target folder
        uses: actions/cache@v2
        id: cache-programs
        with:
          path: |
            ./target/debug
            ./target/release
            ./target/bpfel-unknown-unknown
          key: solana-${{ runner.os }}-v0000-${{ hashFiles('**/programs/**/*.rs') }}-${{ hashFiles('**/programs/**/*.toml') }}
      - name: Upgrade resident program with latest code
        run: |
          npm ci --ignore-scripts
          ./scripts/swap_ci_resident_program_id.sh
          npx @project-serum/anchor-cli@${{ env.ANCHOR_VERSION }} build
          solana program deploy ./target/deploy/uxd.so --program-id ${{ env.RESIDENT_PROGRAM_KEYPAIR }} --upgrade-authority ${{ env.CI_DEPLOYMENT_AUTHORITY_WALLET_PATH }} -v
      - name: Returning funded runner wallet SOLs to the bank
        run: |
          solana transfer --keypair ${{ env.RUNNER_WALLET_PATH }} ${{ env.BANK_WALLET_PATH }} $(echo $(solana balance --keypair ${{ env.RUNNER_WALLET_PATH }} | awk '{print $1}') - ${{ env.TRANSACTION_FEE_OFFSET }} | bc)

  # This deploy a fresh program and run all tests from test_ci_fresh.ts
  #
  # anchor-test-mango-depository-integration-fresh:
  #   name: Anchor Test Deploying a fresh program instance and running light generic tests
  #   runs-on: ubuntu-latest
  #   needs: [market-maker-bots]
  #   steps:
  #     # Checkout
  #     - uses: actions/checkout@v2
  #     # Install Rust
  #     - name: Rust toolchain installation
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: nightly
  #         override: true
  #         profile: minimal
  #     # Install solana
  #     - name: Cache Solana Tool Suite
  #       uses: actions/cache@v2  
  #       id: cache-solana
  #       with:
  #         path: |
  #           ~/.cache/solana/
  #           ~/.local/share/solana/
  #         key: solana-${{ runner.os }}-v0000-${{ env.SOLANA_VERSION }}
  #     - name: install solana
  #       if: steps.cache-solana.outputs.cache-hit != 'true'
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y pkg-config build-essential libudev-dev
  #         sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
  #     - name: Add Solana to PATH
  #       run: echo "/home/runner/.local/share/solana/install/active_release/bin:$PATH" >> $GITHUB_PATH
  #     - name: Setup solana 
  #       run: |
  #         solana --version
  #         solana config set -u d
  #         solana config set --url ${{ env.DEVNET_RPC}}
  #     # Install Yarn
  #     - name: Get yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
  #     - name: Yarn Cache
  #       uses: actions/cache@v2
  #       with:
  #         path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #         key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-modules-
  #     - name: Node 14 installation
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: "14"
  #         cache: "yarn"
  #         registry-url: 'https://npm.pkg.github.com'
  #         scope: "@UXDProtocol"
  #         always-auth: true
  #     # Create Keypair
  #     - name: Create Runner keypair and funds it
  #       run: |
  #         solana-keygen new -o ${{ env.RUNNER_WALLET_PATH }} --no-passphrase --silent
  #         solana transfer --keypair ${{ env.BANK_WALLET_PATH }} $(solana-keygen pubkey ${{ env.RUNNER_WALLET_PATH }}) ${{ env.RUNNER_FUNDING_AMOUNT }} --allow-unfunded-recipient
  #         solana balance
  #     # Cargo caching
  #     - name: Cache Cargo registry + index
  #       uses: actions/cache@v2  
  #       id: cache-anchor
  #       with:
  #         path: |
  #           ~/.cargo/bin/
  #           ~/.cargo/registry/index/
  #           ~/.cargo/registry/cache/
  #           ~/.cargo/git/db/
  #         key: cargo-${{ runner.os }}-v0000-${{ hashFiles('**/Cargo.lock') }}
  #     - name: Cache target folder
  #       uses: actions/cache@v2
  #       id: cache-programs
  #       with:
  #         path: |
  #           ./target/debug
  #           ./target/release
  #           ./target/bpfel-unknown-unknown
  #         key: solana-${{ runner.os }}-v0000-${{ hashFiles('**/programs/**/*.rs') }}-${{ hashFiles('**/programs/**/*.toml') }}
  #     - name: Create NPMRC
  #       run: |
  #         echo "@uxdprotocol:registry=https://npm.pkg.github.com" >> ~/.npmrc
  #         echo "//npm.pkg.github.com/:_authToken=${{ env.NODE_AUTH_TOKEN }}" >> ~/.npmrc
      # # Checkout Mango Client
      # - name: Checkout MangoClient-v3
      #   uses: actions/checkout@v2
      #   with:
      #     repository: blockworks-foundation/mango-client-v3
      #     path: /home/runner/work/uxd-program/uxd-program/third-party-dependencies/mango-client-v3
      # - name: Start Market Making bot for the perp
      #   run: |
      #     cd /home/runner/work/uxd-program/uxd-program/third-party-dependencies/mango-client-v3
      #     yarn install
      #     GROUP=devnet.2 CLUSTER=${{ env.CLUSTER }} KEYPAIR=${{ env.RUNNER_WALLET_PATH }} yarn keeper &
      #     GROUP=devnet.2 CLUSTER=${{ env.CLUSTER }} KEYPAIR=${{ env.RUNNER_WALLET_PATH }} MANGO_ACCOUNT_PUBKEY=${{ env.MANGO_ACCOUNT_MM_SOL }} MARKET=SOL yarn mm &
      #     GROUP=devnet.2 CLUSTER=${{ env.CLUSTER }} KEYPAIR=${{ env.RUNNER_WALLET_PATH }} MANGO_ACCOUNT_PUBKEY=${{ env.MANGO_ACCOUNT_MM_BTC }} MARKET=BTC yarn mm &
      #     GROUP=devnet.2 CLUSTER=${{ env.CLUSTER }} KEYPAIR=${{ env.RUNNER_WALLET_PATH }} MANGO_ACCOUNT_PUBKEY=${{ env.MANGO_ACCOUNT_MM_ETH }} MARKET=ETH yarn mm &
      #     cd -
  #     - name: Yarn install + run tests
  #       run: |
  #         yarn install
  #         ./scripts/reset_program_id.sh
  #         sed  -i.bak "s/${{ env.TEST_DEV }}/${{ env.TEST_CI_FRESH }}/g" ./Anchor.toml
  #         npx @project-serum/anchor-cli@${{ env.ANCHOR_VERSION }} test --skip-local-validator
  #     - name: Close deployed program
  #       run: solana program close $(solana-keygen pubkey ./target/deploy/uxd-keypair.json) --recipient ${{ env.BANK_WALLET_PATH }}
  #     - name: Returning funded runner wallet SOLs to the bank
  #       run: |
  #         solana transfer --keypair ${{ env.RUNNER_WALLET_PATH }} ${{ env.BANK_WALLET_PATH }} $(echo $(solana balance --keypair ${{ env.RUNNER_WALLET_PATH }} | awk '{print $1}') - ${{ env.TRANSACTION_FEE_OFFSET }} | bc)

  anchor-test-mango-depository-SOL:
    name: Test SOL MangoDepository against the resident program
    runs-on: ubuntu-latest
    needs: [anchor-build-and-deploy]
    steps:
      # Checkout
      - uses: actions/checkout@v2
      # Install Rust
      - name: Rust toolchain installation
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
      # Install solana
      - name: Cache Solana Tool Suite
        uses: actions/cache@v2  
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0000-${{ env.SOLANA_VERSION }}
      - name: install solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
      - name: Add Solana to PATH
        run: echo "/home/runner/.local/share/solana/install/active_release/bin:$PATH" >> $GITHUB_PATH
      - name: Setup solana 
        run: |
          solana --version
          solana config set -u d
          solana config set --url ${{ env.DEVNET_RPC}}
      - name: Node 14 installation
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      # Create Keypair
      - name: Create Runner keypair and funds it
        run: |
          solana-keygen new -o ${{ env.RUNNER_WALLET_PATH }} --no-passphrase --silent
          solana transfer --keypair ${{ env.BANK_WALLET_PATH }} $(solana-keygen pubkey ${{ env.RUNNER_WALLET_PATH }}) 1 --allow-unfunded-recipient
          solana balance
      # Cargo caching
      - name: Cache Cargo registry + index
        uses: actions/cache@v2  
        id: cache-anchor
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-${{ runner.os }}-v0000-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache target folder
        uses: actions/cache@v2
        id: cache-programs
        with:
          path: |
            ./target/debug
            ./target/release
            ./target/bpfel-unknown-unknown
          key: solana-${{ runner.os }}-v0000-${{ hashFiles('**/programs/**/*.rs') }}-${{ hashFiles('**/programs/**/*.toml') }}
      # Checkout Mango Client
      - name: Checkout MangoClient-v3
        uses: actions/checkout@v2
        with:
          repository: blockworks-foundation/mango-client-v3
          path: /home/runner/work/uxd-program/uxd-program/third-party-dependencies/mango-client-v3
      - name: Start Keeper and Market Making bot for the perp
        run: |
          cd /home/runner/work/uxd-program/uxd-program/third-party-dependencies/mango-client-v3
          npm ci --ignore-scripts
          GROUP=devnet.2 CLUSTER=${{ env.CLUSTER }} KEYPAIR=${{ env.RUNNER_WALLET_PATH }} npm run keeper &
          GROUP=devnet.2 CLUSTER=${{ env.CLUSTER }} KEYPAIR=${{ env.RUNNER_WALLET_PATH }} MANGO_ACCOUNT_PUBKEY=${{ env.MANGO_ACCOUNT_MM_SOL }} MARKET=SOL npm run mm &
          cd -
      - name: Anchor Test (skip build and deploy)
        run: |
          npm ci --ignore-scripts
          ./scripts/swap_ci_resident_program_id.sh
          sed  -i.bak "s/${{ env.TEST_DEV }}/${{ env.TEST_CI_SOL }}/g" ./Anchor.toml
          npx @project-serum/anchor-cli@${{ env.ANCHOR_VERSION }} test --skip-local-validator --skip-build --skip-deploy
      - name: Returning funded runner wallet SOLs to the bank
        run: |
          solana transfer --keypair ${{ env.RUNNER_WALLET_PATH }} ${{ env.BANK_WALLET_PATH }} $(echo $(solana balance --keypair ${{ env.RUNNER_WALLET_PATH }} | awk '{print $1}') - ${{ env.TRANSACTION_FEE_OFFSET }} | bc)

  anchor-test-mango-depository-BTC:
    name: Test BTC MangoDepository against the resident program
    runs-on: ubuntu-latest
    needs: [anchor-build-and-deploy]
    steps:
      # Checkout
      - uses: actions/checkout@v2
      # Install Rust
      - name: Rust toolchain installation
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
      # Install solana
      - name: Cache Solana Tool Suite
        uses: actions/cache@v2  
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0000-${{ env.SOLANA_VERSION }}
      - name: install solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
      - name: Add Solana to PATH
        run: echo "/home/runner/.local/share/solana/install/active_release/bin:$PATH" >> $GITHUB_PATH
      - name: Setup solana 
        run: |
          solana --version
          solana config set -u d
          solana config set --url ${{ env.DEVNET_RPC}}
      - name: Node 14 installation
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      # Create Keypair
      - name: Create Runner keypair and funds it
        run: |
          solana-keygen new -o ${{ env.RUNNER_WALLET_PATH }} --no-passphrase --silent
          solana transfer --keypair ${{ env.BANK_WALLET_PATH }} $(solana-keygen pubkey ${{ env.RUNNER_WALLET_PATH }}) 1 --allow-unfunded-recipient
          solana balance
      # Cargo caching
      - name: Cache Cargo registry + index
        uses: actions/cache@v2  
        id: cache-anchor
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-${{ runner.os }}-v0000-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache target folder
        uses: actions/cache@v2
        id: cache-programs
        with:
          path: |
            ./target/debug
            ./target/release
            ./target/bpfel-unknown-unknown
          key: solana-${{ runner.os }}-v0000-${{ hashFiles('**/programs/**/*.rs') }}-${{ hashFiles('**/programs/**/*.toml') }}
       # Checkout Mango Client
      - name: Checkout MangoClient-v3
        uses: actions/checkout@v2
        with:
          repository: blockworks-foundation/mango-client-v3
          path: /home/runner/work/uxd-program/uxd-program/third-party-dependencies/mango-client-v3
      - name: Start Keeper and Market Making bot for the perp
        run: |
          cd /home/runner/work/uxd-program/uxd-program/third-party-dependencies/mango-client-v3
          npm ci --ignore-scripts
          GROUP=devnet.2 CLUSTER=${{ env.CLUSTER }} KEYPAIR=${{ env.RUNNER_WALLET_PATH }} npm run keeper &
          GROUP=devnet.2 CLUSTER=${{ env.CLUSTER }} KEYPAIR=${{ env.RUNNER_WALLET_PATH }} MANGO_ACCOUNT_PUBKEY=${{ env.MANGO_ACCOUNT_MM_BTC }} MARKET=BTC npm run mm &
          cd -
      - name: Anchor Test (skip build and deploy)
        run: |
          npm ci --ignore-scripts
          ./scripts/swap_ci_resident_program_id.sh
          sed -i.bak "s/${{ env.TEST_DEV }}/${{ env.TEST_CI_BTC }}/g" ./Anchor.toml
          npx @project-serum/anchor-cli@${{ env.ANCHOR_VERSION }} test --skip-local-validator --skip-build --skip-deploy
      - name: Returning funded runner wallet SOLs to the bank
        run: |
          solana transfer --keypair ${{ env.RUNNER_WALLET_PATH }} ${{ env.BANK_WALLET_PATH }} $(echo $(solana balance --keypair ${{ env.RUNNER_WALLET_PATH }} | awk '{print $1}') - ${{ env.TRANSACTION_FEE_OFFSET }} | bc)


  anchor-test-mango-depository-ETH:
    name: Test ETH MangoDepository against the resident program
    runs-on: ubuntu-latest
    needs: [anchor-build-and-deploy]
    steps:
      # Checkout
      - uses: actions/checkout@v2
      # Install Rust
      - name: Rust toolchain installation
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
      # Install solana
      - name: Cache Solana Tool Suite
        uses: actions/cache@v2  
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0000-${{ env.SOLANA_VERSION }}
      - name: install solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
      - name: Add Solana to PATH
        run: echo "/home/runner/.local/share/solana/install/active_release/bin:$PATH" >> $GITHUB_PATH
      - name: Setup solana 
        run: |
          solana --version
          solana config set -u d
          solana config set --url ${{ env.DEVNET_RPC}}
      - name: Node 14 installation
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      # Create Keypair
      - name: Create Runner keypair and funds it
        run: |
          solana-keygen new -o ${{ env.RUNNER_WALLET_PATH }} --no-passphrase --silent
          solana transfer --keypair ${{ env.BANK_WALLET_PATH }} $(solana-keygen pubkey ${{ env.RUNNER_WALLET_PATH }}) 1 --allow-unfunded-recipient
          solana balance
      # Cargo caching
      - name: Cache Cargo registry + index
        uses: actions/cache@v2  
        id: cache-anchor
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-${{ runner.os }}-v0000-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache target folder
        uses: actions/cache@v2
        id: cache-programs
        with:
          path: |
            ./target/debug
            ./target/release
            ./target/bpfel-unknown-unknown
          key: solana-${{ runner.os }}-v0000-${{ hashFiles('**/programs/**/*.rs') }}-${{ hashFiles('**/programs/**/*.toml') }}
      # Checkout Mango Client
      - name: Checkout MangoClient-v3
        uses: actions/checkout@v2
        with:
          repository: blockworks-foundation/mango-client-v3
          path: /home/runner/work/uxd-program/uxd-program/third-party-dependencies/mango-client-v3
      - name: Start Keeper and Market Making bot for the perp
        run: |
          cd /home/runner/work/uxd-program/uxd-program/third-party-dependencies/mango-client-v3
          npm ci --ignore-scripts
          GROUP=devnet.2 CLUSTER=${{ env.CLUSTER }} KEYPAIR=${{ env.RUNNER_WALLET_PATH }} npm run keeper &
          GROUP=devnet.2 CLUSTER=${{ env.CLUSTER }} KEYPAIR=${{ env.RUNNER_WALLET_PATH }} MANGO_ACCOUNT_PUBKEY=${{ env.MANGO_ACCOUNT_MM_ETH }} MARKET=ETH npm run mm &
          cd -
      - name: Anchor Test (skip build and deploy)
        run: |
          npm ci --ignore-scripts
          ./scripts/swap_ci_resident_program_id.sh
          sed -i.bak "s/${{ env.TEST_DEV }}/${{ env.TEST_CI_ETH }}/g" ./Anchor.toml
          npx @project-serum/anchor-cli@${{ env.ANCHOR_VERSION }} test --skip-local-validator --skip-build --skip-deploy
      - name: Returning funded runner wallet SOLs to the bank
        run: |
          solana transfer --keypair ${{ env.RUNNER_WALLET_PATH }} ${{ env.BANK_WALLET_PATH }} $(echo $(solana balance --keypair ${{ env.RUNNER_WALLET_PATH }} | awk '{print $1}') - ${{ env.TRANSACTION_FEE_OFFSET }} | bc)


  anchor-test-mango-depository-rebalancing:
    name: Test Rebalancing MangoDepository (SOL, BTC, ETH) against the resident program
    runs-on: ubuntu-latest
    needs: [anchor-build-and-deploy]
    steps:
      # Checkout
      - uses: actions/checkout@v2
      # Install Rust
      - name: Rust toolchain installation
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
      # Install solana
      - name: Cache Solana Tool Suite
        uses: actions/cache@v2  
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0000-${{ env.SOLANA_VERSION }}
      - name: install solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
      - name: Add Solana to PATH
        run: echo "/home/runner/.local/share/solana/install/active_release/bin:$PATH" >> $GITHUB_PATH
      - name: Setup solana 
        run: |
          solana --version
          solana config set -u d
          solana config set --url ${{ env.DEVNET_RPC}}
      - name: Node 14 installation
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      # Create Keypair
      - name: Create Runner keypair and funds it
        run: |
          solana-keygen new -o ${{ env.RUNNER_WALLET_PATH }} --no-passphrase --silent
          solana transfer --keypair ${{ env.BANK_WALLET_PATH }} $(solana-keygen pubkey ${{ env.RUNNER_WALLET_PATH }}) 1 --allow-unfunded-recipient
          solana balance
      # Cargo caching
      - name: Cache Cargo registry + index
        uses: actions/cache@v2  
        id: cache-anchor
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-${{ runner.os }}-v0000-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache target folder
        uses: actions/cache@v2
        id: cache-programs
        with:
          path: |
            ./target/debug
            ./target/release
            ./target/bpfel-unknown-unknown
          key: solana-${{ runner.os }}-v0000-${{ hashFiles('**/programs/**/*.rs') }}-${{ hashFiles('**/programs/**/*.toml') }}
      - name: Anchor Test (skip build and deploy)
        run: |
          npm ci --ignore-scripts
          ./scripts/swap_ci_resident_program_id.sh
          sed -i.bak "s/${{ env.TEST_DEV }}/${{ env.TEST_CI_REBALANCING }}/g" ./Anchor.toml
          npx @project-serum/anchor-cli@${{ env.ANCHOR_VERSION }} test --skip-local-validator --skip-build --skip-deploy
      - name: Returning funded runner wallet SOLs to the bank
        run: |
          solana transfer --keypair ${{ env.RUNNER_WALLET_PATH }} ${{ env.BANK_WALLET_PATH }} $(echo $(solana balance --keypair ${{ env.RUNNER_WALLET_PATH }} | awk '{print $1}') - ${{ env.TRANSACTION_FEE_OFFSET }} | bc)


  anchor-test-mango-depository-quote-mint-redeem:
    name: Test Quote mint redeem MangoDepository (SOL, BTC, ETH) against the resident program
    runs-on: ubuntu-latest
    needs: [anchor-build-and-deploy]
    steps:
      # Checkout
      - uses: actions/checkout@v2
      # Install Rust
      - name: Rust toolchain installation
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
      # Install solana
      - name: Cache Solana Tool Suite
        uses: actions/cache@v2  
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0000-${{ env.SOLANA_VERSION }}
      - name: install solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
      - name: Add Solana to PATH
        run: echo "/home/runner/.local/share/solana/install/active_release/bin:$PATH" >> $GITHUB_PATH
      - name: Setup solana 
        run: |
          solana --version
          solana config set -u d
          solana config set --url ${{ env.DEVNET_RPC}}
      - name: Node 14 installation
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-
      # Create Keypair
      - name: Create Runner keypair and funds it
        run: |
          solana-keygen new -o ${{ env.RUNNER_WALLET_PATH }} --no-passphrase --silent
          solana transfer --keypair ${{ env.BANK_WALLET_PATH }} $(solana-keygen pubkey ${{ env.RUNNER_WALLET_PATH }}) 1 --allow-unfunded-recipient
          solana balance
      # Cargo caching
      - name: Cache Cargo registry + index
        uses: actions/cache@v2  
        id: cache-anchor
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: cargo-${{ runner.os }}-v0000-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache target folder
        uses: actions/cache@v2
        id: cache-programs
        with:
          path: |
            ./target/debug
            ./target/release
            ./target/bpfel-unknown-unknown
          key: solana-${{ runner.os }}-v0000-${{ hashFiles('**/programs/**/*.rs') }}-${{ hashFiles('**/programs/**/*.toml') }}
      - name: Anchor Test (skip build and deploy)
        run: |
          npm ci --ignore-scripts
          ./scripts/swap_ci_resident_program_id.sh
          sed -i.bak "s/${{ env.TEST_DEV }}/${{ env.TEST_QUOTE_MINT_REDEEM }}/g" ./Anchor.toml
          npx @project-serum/anchor-cli@${{ env.ANCHOR_VERSION }} test --skip-local-validator --skip-build --skip-deploy
      - name: Returning funded runner wallet SOLs to the bank
        run: |
          solana transfer --keypair ${{ env.RUNNER_WALLET_PATH }} ${{ env.BANK_WALLET_PATH }} $(echo $(solana balance --keypair ${{ env.RUNNER_WALLET_PATH }} | awk '{print $1}') - ${{ env.TRANSACTION_FEE_OFFSET }} | bc)