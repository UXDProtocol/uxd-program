name: Lint and Test

on:
  push:
    branches: [main, v*.*]
  pull_request:
    branches: [main, v*.*]

env:
  CARGO_TERM_COLOR: always
  SOLANA_VERSION: 1.8.12
  RUST_TOOLCHAIN: nightly-2021-12-15

defaults:
  run:
    working-directory: ./

jobs:

  fmt:
    runs-on: ubuntu-latest
    name: Run fnt
    steps:
      # Checkout Repo
      - uses: actions/checkout@v2
      # Installs Rust
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1
      - name: Rust toolchain installation
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          profile: minimal
          components: rustfmt, clippy
      - name: Run fmt
        run: cargo fmt -- --check

  clippy:
    runs-on: ubuntu-latest
    name: Run Clippy
    steps:
      # Checkout Repo
      - uses: actions/checkout@v2
      # Installs Rust
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1
      - name: Rust toolchain installation
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          profile: minimal
          components: rustfmt, clippy
      # The style and complexity lints have not been processed yet.
      - name: Run clippy
        run: cargo clippy -- --deny=warnings --allow=clippy::style --allow=clippy::complexity

  cargo-tests:
    runs-on: ubuntu-latest
    name: Run tests
    steps:
      # Checkout Repo
      - uses: actions/checkout@v2
      # Installs Rust
      - name: Cache Rust
        uses: Swatinem/rust-cache@v1
      - name: Rust toolchain installation
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          profile: minimal
          components: rustfmt, clippy
      # Install solana
      - name: Cache Solana Tool Suite
        uses: actions/cache@v2  
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0000-${{ env.SOLANA_VERSION }}
      - name: install solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          solana --version
          echo "Generating keypair..."
          solana-keygen new -o "$HOME/.config/solana/id.json" --no-passphrase --silent
      # Run tests
      - name: Run tests
        run: cargo test --lib

  cargo-tests-bpf:
    runs-on: ubuntu-latest
    name: Runs test-bpf
    steps:
      # Checkout Repo
      - uses: actions/checkout@v2
      # Installs Rust
      - name: Cache Rust
        uses: Swatinem/rust-cache@v1
      - name: Rust toolchain installation
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          profile: minimal
          components: rustfmt, clippy
      # Install solana
      - name: Cache Solana Tool Suite
        uses: actions/cache@v2  
        id: cache-solana
        with:
          path: |
            ~/.cache/solana/
            ~/.local/share/solana/
          key: solana-${{ runner.os }}-v0000-${{ env.SOLANA_VERSION }}
      - name: install solana
        if: steps.cache-solana.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          solana --version
          echo "Generating keypair..."
          solana-keygen new -o "$HOME/.config/solana/id.json" --no-passphrase --silent
      - name: Run tests BPF
        run: cargo test-bpf